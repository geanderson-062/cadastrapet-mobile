{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar movieURL = \"https://reactnative.dev/movies.json\";\n\nvar App = function App() {\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      data = _useState4[0],\n      setData = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      title = _useState6[0],\n      setTitle = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      description = _useState8[0],\n      setDescription = _useState8[1];\n\n  useEffect(function () {\n    fetch(movieURL).then(function (response) {\n      return response.json();\n    }).then(function (json) {\n      setData(json.movies);\n      setTitle(json.title);\n      setDescription(json.description);\n    }).catch(function (error) {\n      return alert(error);\n    }).finally(function () {\n      return setLoading(false);\n    });\n  }, []);\n\n  function getMoviesAsync() {\n    var response, json;\n    return _regeneratorRuntime.async(function getMoviesAsync$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(fetch(movieURL));\n\n          case 3:\n            response = _context.sent;\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 6:\n            json = _context.sent;\n            setData(json.movies);\n            setTitle(json.title);\n            setDescription(json.description);\n            setLoading(false);\n            _context.next = 16;\n            break;\n\n          case 13:\n            _context.prev = 13;\n            _context.t0 = _context[\"catch\"](0);\n            alert(_context.t0);\n\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 13]], Promise);\n  }\n\n  return _jsx(SafeAreaView, {\n    style: styles.container,\n    children: isLoading ? _jsx(ActivityIndicator, {}) : _jsxs(View, {\n      children: [_jsx(Text, {\n        style: styles.title,\n        children: title\n      }), _jsx(View, {\n        style: {\n          borderBottomWidth: 1,\n          marginBottom: 12\n        }\n      }), _jsx(FlatList, {\n        data: data,\n        keyExtractor: function keyExtractor(_ref, index) {\n          var id = _ref.id;\n          return id;\n        },\n        renderItem: function renderItem(_ref2) {\n          var item = _ref2.item;\n          return _jsx(View, {\n            style: {\n              paddingBottom: 10\n            },\n            children: _jsxs(Text, {\n              style: styles.movieText,\n              children: [item.id, \". \", item.title, \", \", item.releaseYear]\n            })\n          });\n        }\n      }), _jsx(Text, {\n        style: styles.description,\n        children: description\n      })]\n    })\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    marginTop: 48\n  },\n  movieText: {\n    fontSize: 26,\n    fontWeight: \"200\"\n  },\n  title: {\n    fontSize: 32,\n    fontWeight: \"bold\"\n  },\n  description: {\n    textAlign: \"center\",\n    marginBottom: 18,\n    fontWeight: \"200\",\n    color: \"green\"\n  }\n});\nexport default App;","map":{"version":3,"names":["React","useState","useEffect","movieURL","App","isLoading","setLoading","data","setData","title","setTitle","description","setDescription","fetch","then","response","json","movies","catch","error","alert","finally","getMoviesAsync","styles","container","borderBottomWidth","marginBottom","index","id","item","paddingBottom","movieText","releaseYear","StyleSheet","create","flex","alignItems","marginTop","fontSize","fontWeight","textAlign","color"],"sources":["C:/Users/geand/Desktop/PC/projetos/cadastrapet-mobile/src/components/Lista/index.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  SafeAreaView,\r\n  ActivityIndicator,\r\n  FlatList,\r\n} from \"react-native\";\r\n\r\n// get data from this URL!\r\nconst movieURL = \"https://reactnative.dev/movies.json\";\r\n\r\nconst App = () => {\r\n  // managing state with 'useState'\r\n  const [isLoading, setLoading] = useState(true);\r\n  const [data, setData] = useState([]);\r\n\r\n  //editar\r\n  const [title, setTitle] = useState([]);\r\n  const [description, setDescription] = useState([]);\r\n\r\n  // similar to 'componentDidMount', gets called once\r\n  useEffect(() => {\r\n    fetch(movieURL)\r\n      .then((response) => response.json()) // get response, convert to json\r\n      .then((json) => {\r\n        setData(json.movies);\r\n        setTitle(json.title);\r\n        setDescription(json.description);\r\n      })\r\n      .catch((error) => alert(error)) // display errors\r\n      .finally(() => setLoading(false)); // change loading state\r\n  }, []);\r\n\r\n  // Also get call asynchronous function\r\n  async function getMoviesAsync() {\r\n    try {\r\n      let response = await fetch(movieURL);\r\n      let json = await response.json();\r\n      setData(json.movies);\r\n      setTitle(json.title);\r\n      setDescription(json.description);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      alert(error);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n      {/* While fetching show the indicator, else show response*/}\r\n      {isLoading ? (\r\n        <ActivityIndicator />\r\n      ) : (\r\n        <View>\r\n          {/* Title from URL */}\r\n          <Text style={styles.title}>{title}</Text>\r\n          {/* Display each movie */}\r\n          <View style={{ borderBottomWidth: 1, marginBottom: 12 }}></View>\r\n          <FlatList\r\n            data={data}\r\n            keyExtractor={({ id }, index) => id}\r\n            renderItem={({ item }) => (\r\n              <View style={{ paddingBottom: 10 }}>\r\n                <Text style={styles.movieText}>\r\n                  {item.id}. {item.title}, {item.releaseYear}\r\n                </Text>\r\n              </View>\r\n            )}\r\n          />\r\n          {/* Show the description */}\r\n          <Text style={styles.description}>{description}</Text>\r\n        </View>\r\n      )}\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    marginTop: 48,\r\n  },\r\n  movieText: {\r\n    fontSize: 26,\r\n    fontWeight: \"200\",\r\n  },\r\n  title: {\r\n    fontSize: 32,\r\n    fontWeight: \"bold\",\r\n  },\r\n  description: {\r\n    textAlign: \"center\",\r\n    marginBottom: 18,\r\n    fontWeight: \"200\",\r\n    color: \"green\",\r\n  },\r\n});\r\n\r\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module"}