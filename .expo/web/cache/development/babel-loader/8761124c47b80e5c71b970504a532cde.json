{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { createContext, useState } from \"react\";\nimport { useNavigation } from '@react-navigation/native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport var AuthContext = createContext({});\n\nfunction AuthProvider(_ref) {\n  var children = _ref.children;\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      user = _useState2[0],\n      setUser = _useState2[1];\n\n  var navigation = useNavigation();\n\n  function signIn(email, senha) {\n    if (email == 'gean' && senha == '123') {\n      setUser({\n        email: email,\n        status: \"Ativo\"\n      });\n      navigation.navigate(\"Home\");\n    } else {\n      alert('Email ou senha invalidos!');\n    }\n  }\n\n  return _jsx(AuthContext.Provider, {\n    value: {\n      signIn: signIn,\n      user: user\n    },\n    children: children\n  });\n}\n\nexport default AuthProvider;","map":{"version":3,"names":["React","createContext","useState","useNavigation","AuthContext","AuthProvider","children","user","setUser","navigation","signIn","email","senha","status","navigate","alert"],"sources":["C:/Users/geand/Desktop/PC/projetos/cadastrapet-mobile/src/contexts/auth.js"],"sourcesContent":["import React, { createContext, useState } from \"react\";\r\n\r\n//importando a navegacao\r\nimport { useNavigation } from '@react-navigation/native'\r\n\r\n//exportando para outro arquivo poder usar\r\nexport const AuthContext = createContext({})\r\n\r\nfunction AuthProvider({children}){\r\n\r\n    //fazendo os dados para o login\r\n    const [user, setUser] = useState({});\r\n\r\n    //navegacao para outra tela\r\n    const navigation = useNavigation();\r\n\r\n    function signIn(email, senha){\r\n\r\n        //verificando se usuario e igual \r\n       if(email == 'gean' && senha == '123'){\r\n           setUser({\r\n               email: email,\r\n               status: \"Ativo\"\r\n           })\r\n           \r\n           //navegando o usuario para a home\r\n           navigation.navigate(\"Home\");\r\n       }\r\n       //se senha nem email nao forem iguais faca isso\r\n       else{\r\n           alert('Email ou senha invalidos!')\r\n       }\r\n    }\r\n\r\n    //dados enviados\r\n    return(\r\n        <AuthContext.Provider value={{  signIn, user }}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n\r\nexport default AuthProvider;"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,QAA+C,OAA/C;AAGA,SAASC,aAAT,QAA8B,0BAA9B;;AAGA,OAAO,IAAMC,WAAW,GAAGH,aAAa,CAAC,EAAD,CAAjC;;AAEP,SAASI,YAAT,OAAiC;EAAA,IAAVC,QAAU,QAAVA,QAAU;;EAG7B,gBAAwBJ,QAAQ,CAAC,EAAD,CAAhC;EAAA;EAAA,IAAOK,IAAP;EAAA,IAAaC,OAAb;;EAGA,IAAMC,UAAU,GAAGN,aAAa,EAAhC;;EAEA,SAASO,MAAT,CAAgBC,KAAhB,EAAuBC,KAAvB,EAA6B;IAG1B,IAAGD,KAAK,IAAI,MAAT,IAAmBC,KAAK,IAAI,KAA/B,EAAqC;MACjCJ,OAAO,CAAC;QACJG,KAAK,EAAEA,KADH;QAEJE,MAAM,EAAE;MAFJ,CAAD,CAAP;MAMAJ,UAAU,CAACK,QAAX,CAAoB,MAApB;IACH,CARD,MAUI;MACAC,KAAK,CAAC,2BAAD,CAAL;IACH;EACH;;EAGD,OACI,KAAC,WAAD,CAAa,QAAb;IAAsB,KAAK,EAAE;MAAGL,MAAM,EAANA,MAAH;MAAWH,IAAI,EAAJA;IAAX,CAA7B;IAAA,UACKD;EADL,EADJ;AAKH;;AAED,eAAeD,YAAf"},"metadata":{},"sourceType":"module"}